name: Multiple Testing Framework Pipeline

on:
  push:
     branches: [ "master" ]
 
  workflow_dispatch:

jobs:
  testJMeter:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with: 
          ref: master
    
      - name: run jmeter on github action
        uses:  rbhadti94/apache-jmeter-action@v0.4.0
        with:
            testFilePath: './Jmeter/performance.jmx'
            outputReportsFolder: 'Jmeter/result'
     
      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-results
          path: Jmeter/result

  testNightwatch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with: 
          cache: 'npm'
            
      - name: 'Use Node.js ${{ matrix.node-version }}'
        uses: actions/setup-node@v4
        with:
          node-version: 21
          # cache: npm
            
      - name: Install Dependency npm-install
        run: |
            cd Nightwatch
            npm ci
            sudo apt-get install xvfb
                 
      - name: Run Nightwatch tests
        run: |
             cd Nightwatch
             xvfb-run --auto-servernum npm test -- --env chrome
            
      - name: Archive test results
        if: always()  
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: Nightwatch/tests_output 
          
      - name: Send notifications
        if: failure() 
        run: |
           # Add your notification mechanism here (e.g., sending an email, Slack message)
            echo "Test failures occurred. Please check the test reports for details."

  testPostman:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: create directory
        run: |
          mkdir TestArtifacts

      - name: install Node
        uses: actions/setup-node@v4
        with:
          node-version: '21'

      - name: install Newman
        run: |
          cd Postman
          npm install -g newman
          npm install -g newman-reporter-htmlextra
          
      - name: run Tests
        run: |
            cd Postman
            newman run "Rest API CRUD Operations.postmanCollection.json.json" -e "New API Environment.postmanEnvironment.json" --reporters cli,htmlextra --reporter-htmlextra-export testArtifacts/htmlreports.html
        
      - name: output results
        uses: actions/upload-artifact@v4
        with:
          name: Reports
          path: testArtifacts
    
      
